'From Pharo10.0.0 of 15 February 2022 [Build information: Pharo-10.0.0+build.442.sha.a1ff670e34e2d4f0aeb50748cae86f25dcc133b2 (64 Bit)] on 1 March 2022 at 9:43:47.46968 am'!Object subclass: #HateoasEntity	instanceVariableNames: 'model links'	classVariableNames: ''	package: 'AA-RestTuto'!!HateoasEntity commentStamp: 'cd 3/1/2022 09:42' prior: 0!I'm an helper class that can decorate a domain model to add HATEOAS links to it.It can then be send as an HTTP request response that will be transformed in JSON.!!HateoasEntity methodsFor: 'converting' stamp: 'cd 2/28/2022 12:33'!asDictionary	| dict |	dict := Dictionary new.	model class slotNames do: [ :slotName | 		dict at: slotName put: (model instVarNamed: slotName) ].	dict at: #links put: links.	^ dict! !!HateoasEntity methodsFor: 'initialization' stamp: 'cd 2/28/2022 11:30'!initializeWith: aModel	model := aModel.	links := Dictionary new.! !!HateoasEntity methodsFor: 'options' stamp: 'cd 2/28/2022 12:37'!serverUrl 	^ PharoWorkshopRESTAPI serverUrl! !!HateoasEntity methodsFor: 'adding' stamp: 'cd 2/28/2022 12:38'!addSelfLink: relativeUrl	links at: #self put: (self serverUrl / relativeUrl) asString ! !!HateoasEntity methodsFor: 'adding' stamp: 'cd 3/1/2022 09:43'!addLink: relativeUrl named: aName	links 		at: aName asSymbol 		put: (self serverUrl / relativeUrl) asString ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!HateoasEntity class	instanceVariableNames: ''!!HateoasEntity class methodsFor: 'instance creation' stamp: 'cd 2/28/2022 11:32'!on: aModel	^ self new		initializeWith: aModel;		yourself! !!HateoasEntity class methodsFor: 'mapping' stamp: 'cd 2/28/2022 12:34'!neoJsonMapping: mapper	mapper		for: self		customDo: [ :mapping | 		mapping encoder: [ :entity | entity asDictionary ] ]! !